<?xml version="1.0" encoding="utf-8"?>
<mx:Application
  xmlns:mx="http://www.adobe.com/2006/mxml"
  layout="vertical" xmlns:local="*"
  creationComplete="onCreationComplete()"
  >
  <mx:Canvas id="luaCanvas" width="1" height="1"/>
  <mx:Script>
    <![CDATA[
      import mx.controls.Alert;
      import luaAlchemy.LuaAlchemy;

      // Extra imports to expose stuff to Lua
      import mx.effects.Move;
      import mx.containers.*;
      import mx.controls.*;

      private var lua:LuaAlchemy;

      private function bindExternalInterface():void
      {
        if (!ExternalInterface.available) {
          setTimeout(bindExternalInterface, 500);
        } else {
          ExternalInterface.addCallback("callback", callback);
        }
      }

      private function callback(dataStr:String):String
      {
        // TODO: Pass argument as a honest AS3 variable argument directly!
        lua.setGlobal("CALLBACK_ARG", dataStr);
        // TODO: global_pcall!
        var stack:Array = lua.doString(
            "local callback_arg = CALLBACK_ARG;" +
            "CALBACK_ARG = nil;" +
            "return CALLBACK(callback_arg)"
          );
        if (stack.shift() == false)
        {
          // TODO: Flash is invisible 1x1 pixel. Must use JS alerts!
          Alert.show(
              stack.join("\n") + "\n",
              "Lua error",
              mx.controls.Alert.OK
            );
          return stack[0];// ""; // TODO: ?! How to indicate error to JS?!
        }
        // TODO: Ensure stack[0] is a string!
        return stack[0]; // Ignoring all other arguments
      }

      private function onCreationComplete():void
      {
        LuaAssets.init(LuaAlchemy.libInit);

        lua = new LuaAlchemy(LuaAssets.filesystemRoot());
        lua.setGlobal("CANVAS", luaCanvas);

        bindExternalInterface();

        var stack:Array = lua.doFile("builtin://init.lua");
        if (stack.shift() == false)
        {
          // TODO: Flash is invisible 1x1 pixel. Must use JS alerts!
          Alert.show(
              stack.join("\n") + "\n",
              "Lua error",
              mx.controls.Alert.OK
            );
        }
      }

      // TODO: Make this code reusable
      /**
      * When you compile in the Flex library statically, the linker only includes
      * classes you are actually using.  Only the classes used would be available
      * for the Lua script to create.  So to ensure the script has access to the
      * classes I wanted to create, I declared one of them so it would be included.
      */
      private function importClassesForLua():void
      {
        var accordion:Accordion
        var applicationControlBar:ApplicationControlBar
        var box:Box
        var boxDirection:BoxDirection
        var canvas:Canvas
        var controlBar:ControlBar
        var dividedBox:DividedBox
        var form:Form
        var formHeading:FormHeading
        var formItem:FormItem
        var formItemDirection:FormItemDirection
        var grid:Grid
        var gridItem:GridItem
        var gridRow:GridRow
        var hBox:HBox
        var hDividedBox:HDividedBox
        var panel:Panel
        var tabNavigator:TabNavigator
        var tile:Tile
        var tileDirection:TileDirection
        var titleWindow:TitleWindow
        var vBox:VBox
        var vDividedBox:VDividedBox
        var viewStack:ViewStack

        var alert:Alert
        var button:Button
        var buttonBar:ButtonBar
        var buttonLabelPlacement:ButtonLabelPlacement
        var checkBox:CheckBox
        var colorPicker:ColorPicker
        var comboBase:ComboBase
        var comboBox:ComboBox
        var dataGrid:DataGrid
        var dateChooser:DateChooser
        var dateField:DateField
        var formItemLabel:FormItemLabel
        var horizontalList:HorizontalList
        var hRule:HRule
        var hScrollBar:HScrollBar
        var hSlider:HSlider
        var image:Image
        var label:Label
        var linkBar:LinkBar
        var linkButton:LinkButton
        var list:List
        var menu:Menu
        var menuBar:MenuBar
        var navBar:NavBar
        var numericStepper:NumericStepper
        var popUpButton:PopUpButton
        var popUpMenuButton:PopUpMenuButton
        var progressBar:ProgressBar
        var progressBarDirection:ProgressBarDirection
        var progressBarLabelPlacement:ProgressBarLabelPlacement
        var progressBarMode:ProgressBarMode
        var radioButton:RadioButton
        var radioButtonGroup:RadioButtonGroup
        var richTextEditor:RichTextEditor
        var spacer:Spacer
        var sWFLoader:SWFLoader
        var tabBar:TabBar
        var text:Text
        var textArea:TextArea
        var textInput:TextInput
        var tileList:TileList
        var toggleButtonBar:ToggleButtonBar
        var toolTip:ToolTip
        var tree:Tree
        var videoDisplay:VideoDisplay
        var vRule:VRule
        var vScrollBar:VScrollBar
        var vSlider:VSlider

        var timer:Timer
        var move:Move
      }
    ]]>
  </mx:Script>
</mx:Application>
